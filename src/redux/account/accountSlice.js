import { createSlice } from '@reduxjs/toolkit';

const initialState = {
  isAuthenticated: false,
   user: {
    avatar: "",
    email: "",
    fullName: "",
    id: "",
    phone: "",
    role: ""
   }
};




export const accountSlice = createSlice({
  name: 'account',
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {
    doLoginAction: (state, action) => {
        console.log('>>> Check action: ', action)
      // Redux Toolkit allows us to write "mutating" logic in reducers. It
      // doesn't actually mutate the state because it uses the Immer library,
      // which detects changes to a "draft state" and produces a brand new
      // immutable state based off those changes
      state.isAuthenticated = true
      state.user = action.payload.user
    },

    doFetchUserAction: (state, action) => {
        console.log('>>> Check action: ', action.payload.user)
      // Redux Toolkit allows us to write "mutating" logic in reducers. It
      // doesn't actually mutate the state because it uses the Immer library,
      // which detects changes to a "draft state" and produces a brand new
      // immutable state based off those changes
      state.isAuthenticated = true
      state.user = action.payload.user
    }
  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: () => {
  
  },
});

export const {doLoginAction, doFetchUserAction } = accountSlice.actions;

export default accountSlice.reducer;
